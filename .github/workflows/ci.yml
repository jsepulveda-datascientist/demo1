name: CI & Publish (GHCR via PAT)

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:

# GITHUB_TOKEN a veces NO tiene permiso para publicar en GHCR en ciertos repos/configs.
# Usamos un PAT (Personal Access Token) con scopes: write:packages, read:packages (y repo si es privado).
permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -q

  build-and-push:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: test
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}       # => <owner>/<repo>
      OWNER: ${{ github.repository_owner }}      # => <owner>
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Debug who is pushing
        run: |
          echo "Actor: ${{ github.actor }}"
          echo "Owner: ${{ env.OWNER }}"
          echo "Repo:  ${{ github.repository }}"
          echo "Tags target: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"

      # Login con PAT (crea GHCR_PAT con write:packages)
      - name: Log in to GHCR (PAT)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.OWNER }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=long
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
